{"version":3,"sources":["../node_modules/django-channels/dist sync","config.js","ServerStatus.js","Spinner.js","LoadingScreen.js","Task.js","CalendarView.js","util.js","LimitPanel.js","SelectedTaskList.js","AvailableTaskList.js","TaskSelector.js","LoginScreen.js","ErrorScreen.js","App.js","registerServiceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","config","protocol","hostname","port","process","PORT","colorScale","ServerStatus","props","state","serverAlive","ping","bind","this","timer","setInterval","clearInterval","self","axios","get","httpaddr","then","res","setState","catch","err","response","statusString","className","Component","Spinner","LoadingScreen","Task","c","Color","task","category","style","backgroundColor","borderColor","darken","desc","date","format","starttime","endtime","tooltipText","days","hoursFromMidnight","t","tt","clone","startOf","diff","margin","CalendarView","createCalendar","updateCalendar","svg","d3","svgNode","plot","append","attr","dayScale","domain","timeScale","timeAxis","dateAxis","plotWidth","size","plotHeight","range","dayAxis","call","selectAll","data","d","taskBlocks","tasks","blockGroups","enter","taskDescs","text","on","is_sticky","clickHandler","bandwidth","classed","exit","remove","ref","node","width","height","taskHours","moment","duration","asHours","groupLimits","1","2","3","4","5","6","7","defaultGroups","_","forEach","k","LimitPanel","values","val","groupedTasks","groupBy","Object","assign","groupHours","mapValues","group","reduce","ttl","categoryCounts","sortBy","map","g","classes","key","toFixed","ttlHours","SelectedTaskList","i","ttText","onClick","dayOrder","AvailableTaskList","showConflicts","filterText","filterSearched","filterAvailable","groupTasks","target","value","trim","re","RegExp","filter","test","selTasks","selectedTasks","findIndex","st","Math","max","min","unset","ts","groups","availTasks","gid","groupName","j","type","name","checked","onChange","showAllTasks","htmlFor","showUnconflictingTasks","updateGroup","placeholder","updateTextFilter","savingPanel","TaskSelector","message","requests","msgPanel","overlappingTasks","maxStart","minEnd","push","length","overlapTask","reqConfig","headers","authToken","put","obj","merge","availableTasks","destroy","console","log","delete","LoginScreen","processLogin","isLoading","loginErrors","preventDefault","username","password","post","cortex","status","token","errs","flattenDeep","errorList","errDisplay","spinner","onSubmit","disabled","ErrorScreen","convertTask","App","Cortex","errText","updatedCortex","wsConnect","sock","WebSocketBridge","connect","wsaddr","addEventListener","event","evt","action","hasKey","warn","availLoad","myTasksLoad","all","spread","avails","mine","myTasks","statusText","loadInitialData","screen","getValue","isLocalhost","Boolean","window","location","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","document","getElementById","URL","origin","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bb5c9f8c.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 51;","var config = {\r\n  // protocol: 'https',\r\n  // hostname: '54.174.247.37:8000',\r\n\r\n  //dev: use http\r\n//  protocol: \"http\",\r\n//  hostname: \"127.0.0.1:8000\", //\"localhost:8000\",\r\n\r\n  //prod: use https\r\nprotocol: \"https\",\r\nhostname: \"tasksystem-frontend-1ddd9ca6aed7.herokuapp.com\", \r\nport: process.env.PORT || 8080, \r\n\r\n  colorScale: [\r\n    \"\",\r\n    \"#f7cbd7\",\r\n    \"#b3cde3\",\r\n    \"#ccebc5\",\r\n    \"#decbe4\",\r\n    \"#fed9a6\",\r\n    \"#ffffcc\",\r\n    \"#bde4e5\",\r\n    \"#dbdbdb\",\r\n  ], // colorbrewer pastel1\r\n};\r\n\r\nconfig[\"httpaddr\"] = config.protocol + \"://\" + config.hostname;\r\n//dev: use ws\r\n// config[\"wsaddr\"] = \"ws://\" + config.hostname;\r\n\r\n//prod: use wss\r\nconfig[\"wsaddr\"] = \"wss://\" + config.hostname;\r\n\r\nexport default config;\r\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport config from './config';\n\nclass ServerStatus extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      serverAlive: false\n    };\n\n    this.ping = this.ping.bind(this);\n  }\n\n  componentDidMount() {\n    // 30 second timer\n    this.timer = setInterval(this.ping, 30 * 1000);\n    this.ping();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer); // no more timing!\n  }\n\n  ping() {\n    var self = this;\n    // ping the server\n    //this.setState({serverAlive: true});\n    axios.get(config.httpaddr + '/')\n      .then(function(res) {\n        self.setState({serverAlive: true});\n      })\n      .catch(function(err) {\n        if(err.response) {\n          self.setState({serverAlive: true}); // we just need a response\n        } else {\n          self.setState({serverAlive: false});\n        }\n      });\n  }\n\n  render() {\n    var statusString = this.state.serverAlive ? \"Online\" : \"Offline\";\n    return (\n      <div className=\"ServerStatus\">\n        <label>Server status:</label>\n        <div className={\"status-icon \" + (this.state.serverAlive ? \"server-online\" : \"server-offline\")}></div>\n        <p>{statusString}</p>\n      </div>\n    );\n  }\n}\n\nexport default ServerStatus;\n\n","import React, { Component } from 'react';\n\nclass Spinner extends Component {\n  render() {\n    return (\n      <div className=\"spinner\">\n        <div className=\"spinner-stage-1\"></div>\n        <div className=\"spinner-stage-2\"></div>\n        <div className=\"spinner-stage-3\"></div>\n        <div className=\"spinner-stage-4\"></div>\n        <div className=\"spinner-stage-5\"></div>\n        <div className=\"spinner-stage-6\"></div>\n        <div className=\"spinner-stage-7\"></div>\n        <div className=\"spinner-stage-8\"></div>\n        <div className=\"spinner-stage-9\"></div>\n        <div className=\"spinner-stage-10\"></div>\n        <div className=\"spinner-stage-11\"></div>\n        <div className=\"spinner-stage-12\"></div>\n      </div>\n    );\n  }\n}\n\nexport default Spinner;\n\n","import React, { Component } from 'react';\n\nimport Spinner from './Spinner';\n\nclass LoadingScreen extends Component {\n  render() {\n    return (\n      <div className=\"LoadingScreen\">\n        <Spinner />\n        <p className=\"spinner-text\">Loading...</p>\n      </div>\n    );\n  }\n}\n\nexport default LoadingScreen;\n\n","import React, { Component } from 'react';\nimport config from './config';\nimport Color from 'color';\n\nclass Task extends Component {\n  render() {\n    var c = new Color(config.colorScale[this.props.task.category]);\n    var style = {\n      backgroundColor: c, \n      borderColor: c.darken(0.2)\n    };\n    return (\n      <div className=\"Task\" style={style}>\n        <div className=\"task-info\">\n          <span className=\"code\">{this.props.task.code}</span>\n          <span className=\"desc\">{this.props.task.desc}</span>\n        </div>\n\n        <div className=\"time-info\">\n          <time className=\"day\">{this.props.task.date.format('ddd')}</time>\n          <time className=\"time\">{this.props.task.starttime.format('HH:mm')}</time>\n          &ndash;\n          <time className=\"time\">{this.props.task.endtime.format('HH:mm')}</time>\n        </div>\n        \n        <p className=\"tooltip\">\n          {this.props.tooltipText}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Task;\n\n","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport config from './config';\n\nconst days = [\"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\"];\n\nfunction hoursFromMidnight(t) {\n  var tt = t.clone().startOf('day');\n  return t.diff(tt, 'hours', true); // real number diff\n}\n\nconst margin = {\n  top: 18,\n  bottom: 5,\n  left: 45,\n  right: 5\n};\n\nclass CalendarView extends Component {\n  constructor(props) {\n    super(props);\n    this.createCalendar = this.createCalendar.bind(this);\n    this.updateCalendar = this.updateCalendar.bind(this);\n  }\n\n  componentDidMount() {\n    this.createCalendar();\n    this.updateCalendar();\n  }\n\n  componentDidUpdate() {\n    this.updateCalendar();\n  }\n\n  createCalendar() {\n    const svg = d3.select(this.svgNode);\n    this.plot = svg.append('g')\n      .attr('class', 'cal');\n\n    this.dayScale = d3.scaleBand()\n      .domain(days);\n    this.timeScale = d3.scaleLinear()\n      .domain([7, 22]); // hours\n    \n    // create the basic structure\n    this.timeAxis = svg.append('g')\n      .attr('class', 'time axis');\n    this.dateAxis = svg.append('g')\n      .attr('class', 'date axis');\n  }\n\n  updateCalendar() {\n    const self = this;\n    const svg = d3.select(this.svgNode);\n\n    var plotWidth = this.props.size[0] - margin.left - margin.right,\n        plotHeight = this.props.size[1] - margin.top - margin.bottom;\n    \n    // update scales\n    this.dayScale.range([0, plotWidth]);\n    this.timeScale.range([0, plotHeight]);\n\n    // Axes and positioning updates\n    var dayAxis = d3.axisTop(this.dayScale);\n    this.dateAxis\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n      .call(dayAxis);\n    var timeAxis = d3.axisLeft(this.timeScale);\n    this.timeAxis\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n      .call(timeAxis);\n    this.plot.attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n    svg.selectAll('.day.label').data(days)\n      .attr('x', function(d) {return self.dayScale(d);})\n      .attr('y', 14);\n\n    var taskBlocks = this.plot.selectAll('.task').data(self.props.tasks, function(d) {return d.code});\n    var blockGroups = taskBlocks.enter()\n      .append('g')\n        .attr('class', 'task');\n    blockGroups.append('rect');\n    var taskDescs = blockGroups.append('foreignObject')\n      .append('xhtml:body')\n      .style('background-color', 'rgba(0,0,0,0)');\n    taskDescs.append('xhtml:p').attr('class', 'taskdesc')\n    taskDescs.append('xhtml:p').attr('class', 'tooltip')\n    .style(\"border\", \"0.5px solid white\")\n    .style(\"border-radius\", \"2px\")\n    .style(\"background-color\", \"white\").text('remove');\n\n    taskBlocks = this.plot.selectAll('.task').data(self.props.tasks, function(d) {return d.code});\n    taskBlocks\n      .attr('transform', function(d) {\n        return 'translate(' + self.dayScale(d.date.format(\"ddd\")) + ',' +\n                              self.timeScale(hoursFromMidnight(d.starttime)) +\n                              ')';\n      })\n      .on('click', function(d) {\n        if(!d.is_sticky) {\n          return self.props.clickHandler(d);\n        }\n      });\n    taskBlocks.selectAll('rect')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('width', function(d) {\n        return self.dayScale.bandwidth();\n      })\n      .attr('height', function(d) {\n        return self.timeScale(hoursFromMidnight(d.endtime)) - \n               self.timeScale(hoursFromMidnight(d.starttime));\n      })\n      .attr('fill', function(d) {\n        return config.colorScale[d.category];\n      });\n    taskBlocks.selectAll('foreignObject')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('width', function(d) {\n        return self.dayScale.bandwidth();\n      })\n      .attr('height', function(d) {\n        return self.timeScale(hoursFromMidnight(d.endtime)) - \n               self.timeScale(hoursFromMidnight(d.starttime));\n      });\n    taskBlocks.selectAll('body').classed('clickable', function(d) {\n      return !d.is_sticky;\n    });\n    taskBlocks.selectAll('.taskdesc')\n      .attr('style', function(d) {\n        var h = self.timeScale(hoursFromMidnight(d.endtime)) - \n                self.timeScale(hoursFromMidnight(d.starttime));\n        return 'height:' + (h-5) + 'px';\n      })\n      .text(function(d) {\n        return d.code + ': ' + d.desc;\n      });\n    taskBlocks.exit().remove();\n  }\n\n  render() {\n    // TODO: d3 calendar view of tasks\n    return (\n      <div className=\"CalendarView\">\n        <svg ref={node => this.svgNode = node} \n             width={this.props.size[0]} \n             height={this.props.size[1]}>\n        </svg>\n      </div>\n    );\n  }\n}\n\nexport default CalendarView;\n\n","import moment from 'moment';\n\nvar taskHours = function(task) {\n  return moment.duration(task.endtime.diff(task.starttime)).asHours();\n}\n\nexport default taskHours;\n\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport taskHours from \"./util\";\n\nconst groupLimits = {\n  1: [0, 14],\n  2: [0, 14],\n  3: [0, 10],\n  4: [0, 14],\n  5: [0, 10],\n  6: [0, 6],\n  7: [0, 1],\n};\nconst hourLimit = 14;\n\nvar defaultGroups = {};\n_.keys(groupLimits).forEach(function (k) {\n  defaultGroups[k] = [];\n});\n\n// Limits are not explicitly enforced. The old system did this so\n// this one does the same\nclass LimitPanel extends Component {\n  render() {\n    var tasks = _.values(this.props.tasks.val());\n    var groupedTasks = _.groupBy(_.values(tasks), \"category\");\n    groupedTasks = Object.assign({}, defaultGroups, groupedTasks);\n    var groupHours = _.mapValues(groupedTasks, function (group) {\n      return _.reduce(\n        group,\n        function (ttl, task) {\n          return ttl + taskHours(task);\n        },\n        0\n      );\n    });\n    var groups = _.sortBy(_.keys(groupLimits));\n    var categoryCounts = groups.map(function (g) {\n      var classes = \"\";\n      if (\n        groupHours[g] < groupLimits[g][0] ||\n        groupHours[g] > groupLimits[g][1]\n      ) {\n        classes = classes + \" violation\";\n      }\n      return (\n        <li className={classes} key={g}>\n          <label>Category {g}</label>\n          <div className=\"count\">\n            {groupLimits[g][0]} &le; {groupHours[g].toFixed(2)} &le;{\" \"}\n            {groupLimits[g][1]}\n          </div>\n        </li>\n      );\n    });\n    var ttlHours = _.reduce(\n      tasks,\n      function (ttl, task) {\n        return ttl + taskHours(task);\n      },\n      0\n    );\n\n    return (\n      <div className=\"LimitPanel\">\n        <h2>Limits</h2>\n        <p className=\"info-text\">\n          Please pay attention to any red lines. If you take too many tasks of a\n          certain type then the SV chairs will remove those at random.\n        </p>\n        <ul>\n          {categoryCounts}\n          <li className={ttlHours < hourLimit ? \"violation\" : \"\"}>\n            <label>Total hours</label>\n            <div className=\"count\">\n              {ttlHours.toFixed(2)} / {hourLimit}\n            </div>\n          </li>\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default LimitPanel;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\n\nimport Task from './Task';\nimport CalendarView from './CalendarView';\nimport LimitPanel from './LimitPanel';\n\nclass SelectedTaskList extends Component {\n\n  render() {\n    const self = this;\n\n    var sortedTasks = _.sortBy(_.values(this.props.tasks.val()), 'starttime');\n    var tasks = sortedTasks.map(function(task, i) {\n      var clickHandler = null;\n      var ttText = \"\";\n      var className = \"task\";\n      if(!task.is_sticky) {\n        clickHandler = self.props.clickHandler.bind(this, task);\n        ttText = \"remove\";\n        className += \" clickable\";\n      }\n      return (\n        <li key={i} onClick={clickHandler} className={className}>\n          <Task task={task} tooltipText={ttText} />\n        </li>\n      );\n    });\n    return (\n      <div className=\"SelectedTaskList\">\n        <h1>Selected Tasks</h1>\n        <LimitPanel tasks={self.props.tasks} />\n        <CalendarView size={[518,498]} clickHandler={self.props.clickHandler} \n                                       tasks={_.values(self.props.tasks.val())} />\n        <ul>\n          {tasks}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default SelectedTaskList;\n","import React, { Component } from 'react';\nimport _ from 'lodash';\n\nimport Task from './Task'\n\nconst dayOrder = {\n  \"Sat\": 1,\n  \"Sun\": 2,\n  \"Mon\": 3,\n  \"Tue\": 4,\n  \"Wed\": 5,\n  \"Thu\": 6,\n  \"Fri\": 7\n};\n\nclass AvailableTaskList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showConflicts: false,\n      groupBy: \"category\",\n      filterText: \"\"\n    };\n\n    this.filterSearched = this.filterSearched.bind(this);\n    this.filterAvailable = this.filterAvailable.bind(this);\n    this.groupTasks = this.groupTasks.bind(this);\n  }\n\n  showAllTasks(e) {\n    this.setState({showConflicts: true});\n  }\n\n  showUnconflictingTasks(e) {\n    this.setState({showConflicts: false});\n  }\n\n  updateGroup(e) {\n    this.setState({groupBy: e.target.value});\n  }\n\n  updateTextFilter(e) {\n    this.setState({filterText: e.target.value.trim()});\n  }\n\n  filterSearched(tasks) {\n    if(this.state.filterText) {\n      var re = new RegExp(this.state.filterText, 'i');\n      tasks = _.filter(tasks, function(task, k) {\n        return re.test(task.code + ' ' + task.desc);\n      })\n    }\n    return tasks;\n  }\n\n  filterAvailable(tasks) {\n    var self = this;\n    if(!this.state.showConflicts) {\n      const selTasks = _.values(self.props.selectedTasks.val());\n      _.keys(tasks).forEach(function(k) {\n        var task = tasks[k];\n        var overlapIdx = _.findIndex(selTasks, function(st) {\n          var maxStart = Math.max(task.starttime, st.starttime);\n          var minEnd = Math.min(task.endtime, st.endtime);\n          return maxStart < minEnd;\n        });\n        if(overlapIdx >= 0) {\n          _.unset(tasks, k);\n        }\n      });\n    }\n    return tasks;\n  }\n\n  groupTasks(tasks) {\n    var self = this;\n    // Group by whatever the thing is set to\n    var groupedTasks;\n    var ts = _.values(tasks);\n    switch(self.state.groupBy) {\n      case \"date\":\n        groupedTasks = _.groupBy(ts, function(tt) {\n          //return tt.date.format(\"YYYY-MM-DD\");\n          return tt.date.format(\"ddd\");\n        });\n        break;\n      case \"category\":\n        groupedTasks = _.groupBy(ts, function(tt) {\n          return \"Category \" + tt.category;\n        });\n        break;\n      default:\n        groupedTasks = _.groupBy(ts, self.state.groupBy);\n        break;\n    }\n    return groupedTasks;\n  }\n\n  render() {\n    var self = this;\n    // Filter and group the tasks\n    var tasks = this.filterAvailable(Object.assign({}, this.props.tasks.val()));\n    tasks = this.filterSearched(tasks);\n    var groupedTasks = this.groupTasks(tasks);\n    var groups = _.keys(groupedTasks);\n    if(self.state.groupBy === \"date\") {\n      groups = _.sortBy(groups, function(d) {\n        return dayOrder[d];\n      });\n    } else {\n      groups = _.sortBy(groups);\n    }\n    // Render all the individual tasks\n    var availTasks = groups.map(function(gid, i) {\n      var taskGroup = _.sortBy(groupedTasks[gid], 'code');\n      var groupName = gid;\n      var tasks = taskGroup.map(function(task, j) {\n        var clickHandler = null;\n        var ttText = \"\";\n        var className = \"task\";\n        if(!task.is_sticky) {\n          clickHandler = self.props.clickHandler.bind(this, task);\n          ttText = \"add\";\n          className += \" clickable\";\n        }\n        return(\n          <li key={j} onClick={clickHandler} className={className}>\n            <Task task={task} tooltipText={ttText} />\n          </li>\n        );\n        // TODO: need a spinner here for the selecting task query\n      });\n      return (\n        <li className=\"taskgroup\" key={i}>\n          <h2 className=\"category\">{groupName}</h2>\n          <ul>\n            {tasks}\n          </ul>\n        </li>\n      );\n    });\n    return (\n      <div className=\"AvailableTaskList\">\n\n        <h1>Available Tasks</h1>\n        <div className=\"view-controls\">\n          <div className=\"taskfilter\">\n            <h3>Filter by</h3>\n            <input type=\"radio\" name=\"taskfilter\" id=\"taskfilter-all\" \n                   checked={self.state.showConflicts}\n                   onChange={self.showAllTasks.bind(this)} value=\"all\" />\n            <label htmlFor=\"taskfilter-all\">All</label>\n            <input type=\"radio\" name=\"taskfilter\" id=\"taskfilter-noconflict\" \n                   checked={!self.state.showConflicts}\n                   onChange={self.showUnconflictingTasks.bind(this)} value=\"noconflict\" />\n            <label htmlFor=\"taskfilter-noconflict\">Non-overlapping</label>\n          </div>\n          <div className=\"taskgrouper\">\n            <h3>Group by</h3>\n            <input type=\"radio\" name=\"taskgroup\" id=\"taskgroup-category\"\n                   checked={self.state.groupBy === \"category\"}\n                   onChange={self.updateGroup.bind(this)} \n                   value=\"category\" />\n            <label htmlFor=\"taskgroup-category\">Category</label>\n            <input type=\"radio\" name=\"taskgroup\" id=\"taskgroup-date\"\n                   checked={self.state.groupBy === \"date\"}\n                   onChange={self.updateGroup.bind(this)} \n                   value=\"date\" />\n            <label htmlFor=\"taskgroup-date\">Date</label>\n          </div>\n          <input type=\"text\" id=\"search-text\" className=\"task-textfilter\"\n                 placeholder=\"Search tasks\"\n                 onChange={self.updateTextFilter.bind(this)} />\n        </div>\n        <ul className=\"availabletasks\">\n          {availTasks}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default AvailableTaskList;\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport config from './config';\r\n\r\nimport SelectedTaskList from './SelectedTaskList';\r\nimport AvailableTaskList from './AvailableTaskList';\r\nimport _ from 'lodash';\r\n\r\nvar savingPanel = (\r\n  <div className=\"SavingPanel\">\r\n    <label className=\"message\">Saving...</label>\r\n    <div className=\"loading-spinner\"></div>\r\n  </div>\r\n);\r\n\r\nclass TaskSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      message: null,\r\n      requests: 0\r\n    };\r\n  }\r\n\r\n  render() {\r\n    var self = this;\r\n    var handleTaskSelect = function(task, e) {\r\n      \r\n      //check if the task to be selected overlaps with any existing selected task\r\n      const selTasks = _.values(self.props.selectedTasks.val());\r\n      var overlapTaskId = 0;\r\n      var overlapTaskDess = \"\";\r\n      var overlappingTasks = [];\r\n      var overlapIdx = _.findIndex(selTasks, function(st) {\r\n        overlapTaskId = st.code;\r\n        overlapTaskDess = st.desc;\r\n        var maxStart = Math.max(task.starttime, st.starttime);\r\n        var minEnd = Math.min(task.endtime, st.endtime);\r\n        if(maxStart < minEnd)\r\n          overlappingTasks.push(st);\r\n        return maxStart < minEnd;\r\n      });\r\n      if(overlappingTasks.length > 0) {\r\n        var message = \" Overlap with tasks: \" ;\r\n        overlappingTasks.forEach(function(overlapTask) {\r\n          message += ` ${overlapTask.code} - ${overlapTask.desc}`;\r\n        });\r\n        message += \". Remove these tasks before selecting this task.\";\r\n        self.setState({ message: message });\r\n        return;\r\n      }\r\n      \r\n      var reqConfig = {\r\n        headers: {\r\n          'Authorization': 'Token ' + self.props.authToken.val()\r\n        }\r\n      };\r\n      var req = axios.put(config.httpaddr + '/select_task/' + task.code, {}, reqConfig)\r\n        .then(function(res) {\r\n          var obj = {};\r\n          obj[task.code] = task;\r\n          self.props.selectedTasks.merge(obj);\r\n          if (self.props.availableTasks[task.code]) {\r\n            self.props.availableTasks[task.code].destroy();\r\n          }\r\n          self.setState({message: null});\r\n        })\r\n        .catch(function(err) {\r\n          var message = \"Server error\";\r\n          console.log(\"err: \"+err.response);\r\n          if(err.response && err.response.data) {\r\n            switch(err.response.data.code) {\r\n              case \"task_taken\":\r\n                message = task.desc + \" already taken\";\r\n                break;\r\n              default:\r\n                message = err.response.data.code;\r\n                break;\r\n            }\r\n          }\r\n          self.setState({message: message});\r\n        })\r\n        .then(function() {\r\n          self.setState({requests: self.state.requests-1});\r\n        });\r\n      // put this in the req state\r\n      self.setState({requests: self.state.requests+1});\r\n    };\r\n    var handleTaskDeselect = function(task) {\r\n      var reqConfig = {\r\n        headers: {\r\n          'Authorization': 'Token ' + self.props.authToken.val()\r\n        }\r\n      };\r\n      var req = axios.delete(config.httpaddr + '/select_task/' + task.code, reqConfig)\r\n        .then(function(res) {\r\n          var obj = {};\r\n          obj[task.code] = task;\r\n          self.props.availableTasks.merge(obj);\r\n          self.props.selectedTasks[task.code].destroy();\r\n          self.setState({message: null});\r\n        })\r\n        .catch(function(err) {\r\n          var message = \"Server error\";\r\n          if(err.response && err.response.data) {\r\n            switch(err.response.data.code) {\r\n              case \"task_not_removable\":\r\n                message = task.desc + \" cannot be removed\";\r\n                break;\r\n              default:\r\n                message = err.response.data.code;\r\n                break;\r\n            }\r\n          }\r\n          self.setState({message: message});\r\n        })\r\n        .then(function() {\r\n          self.setState({requests: self.state.requests-1});\r\n        });\r\n      // put this in the req state\r\n      self.setState({requests: self.state.requests+1});\r\n    };\r\n    var msgPanel;\r\n    if(this.state.message) {\r\n      msgPanel = (\r\n        <div className=\"alert alert-warning\">\r\n          <p><strong>Note:</strong>{this.state.message}</p>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"TaskSelector\">\r\n        {msgPanel}\r\n        {this.state.requests > 0 ? savingPanel : null}\r\n        <div className=\"ui\">\r\n          <AvailableTaskList clickHandler={handleTaskSelect} \r\n                             tasks={this.props.availableTasks} \r\n                             selectedTasks={this.props.selectedTasks} />\r\n          <SelectedTaskList clickHandler={handleTaskDeselect}\r\n                            tasks={this.props.selectedTasks} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskSelector;\r\n\r\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport _ from 'lodash';\n\nimport config from './config';\n\nclass LoginScreen extends Component {\n  constructor(props) {\n    super(props);\n\n    this.processLogin = this.processLogin.bind(this);\n    this.state = {\n      isLoading: false,\n      loginErrors: []\n    };\n  }\n\n  processLogin(e) {\n    var self = this;\n    e.preventDefault();\n    var data = {\n      username: e.target.username.value,\n      password: e.target.password.value\n    };\n    self.setState({isLoading: true});\n    axios.post(config.httpaddr + '/api-token-auth/', data)\n      .then(function(res) {\n        self.setState({loginErrors: [], isLoading: false});\n        self.props.cortex.merge({\n          status: \"loading\",\n          authToken: res.data.token\n        });\n      })\n      .catch(function(err) {\n        console.log(err);\n        var res = err.response.data;\n        var errs = _.keys(res).map(function(k) {\n          return res[k].map(function(err) {\n            return k + ': ' + err;\n          });\n        });\n        errs = _.flattenDeep(errs);\n        self.setState({loginErrors: errs, isLoading: false});\n      });\n  }\n\n  render() {\n    var errorList = this.state.loginErrors.map(function(err, i) {\n      return <li key={i}>{err}</li>\n    });\n    if(errorList.length > 0) {\n      var errDisplay = (\n        <div className=\"alert alert-error\">\n          <p><strong>Login error</strong></p>\n          <ul>\n            {errorList}\n          </ul>\n        </div>\n      );\n    }\n    if(this.state.isLoading) {\n      var spinner = <div className=\"loading-spinner\"></div>;\n    }\n    return (\n      <div className=\"LoginScreen\">\n        <h1>Please log in</h1>\n        {errDisplay}\n        <form onSubmit={this.processLogin}>\n          <label>Username: <input type=\"text\" name=\"username\" className =\"needMargin\"/></label>\n          <label>Password: <input type=\"password\" name=\"password\" className =\"needMargin\"/></label>\n          <button type=\"submit\" disabled={this.state.isLoading}>Login {spinner}</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginScreen;\n\n","import React, { Component } from 'react';\n\nclass ErrorScreen extends Component {\n  render() {\n    return (\n      <div className=\"ErrorScreen\">\n        <p className=\"alert alert-error\">\n          <strong>Error</strong> {this.props.err}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default ErrorScreen;\n\n","import React, { Component } from 'react';\nimport Cortex from 'cortexjs';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { WebSocketBridge } from 'django-channels';\n\nimport './App.css';\nimport config from './config';\n\nimport ServerStatus from './ServerStatus';\nimport LoadingScreen from './LoadingScreen';\nimport TaskSelector from './TaskSelector';\nimport LoginScreen from './LoginScreen';\nimport ErrorScreen from './ErrorScreen';\n\nfunction convertTask(task) {\n  task.starttime = moment(task.date + ' ' + task.starttime);\n  task.endtime = moment(task.date + ' ' + task.endtime);\n  task.date = moment(task.date); // set this last so we don't break nice things\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    // initialize the state and set up the re-rendering callback\n    var initState = {\n      status: \"unauthorized\",\n      authToken: null,\n      //status: \"loading\",\n      //authToken: '3f5fbf167ddda607626889ce07d1c401abeddc0f',\n      errText: null,\n      availableTasks: {},\n      selectedTasks: {}\n    };\n    var cortex = new Cortex(initState, (updatedCortex) => {\n      this.setState({cortex: updatedCortex});\n    });\n    this.state = {cortex: cortex};\n\n    this.wsConnect = this.wsConnect.bind(this);\n  }\n\n  wsConnect() {\n    var self = this;\n    var sock = new WebSocketBridge();\n    sock.connect(config.wsaddr);\n\n    sock.addEventListener(\"message\", function(event) {\n      let evt = event.data;\n      switch(evt.action) {\n        case \"remove\":\n          if(self.state.cortex.availableTasks.hasKey(evt.task.code))\n            self.state.cortex.availableTasks[evt.task.code].destroy();\n          break;\n        case \"add\":\n          var task = evt.task;\n          convertTask(task);\n          var obj = {};\n          obj[task.code] = task;\n          self.state.cortex.availableTasks.merge(obj);\n          break;\n        default:\n          console.warn(\"Unknown action: \" + evt.action);\n          break;\n      }\n    });\n\n  }\n\n  // TODO: load the user's available and selected tasks\n  loadInitialData() {\n    const self = this;\n    var reqConfig = {\n      headers: {\n        'Authorization': 'Token ' + this.state.cortex.authToken.val()\n      }\n    };\n    var availLoad = axios.get(config.httpaddr + '/available_tasks/', reqConfig);\n    var myTasksLoad = axios.get(config.httpaddr + '/selected_tasks/', reqConfig);\n    axios.all([availLoad, myTasksLoad])\n      .then(axios.spread(function(avails, mine) {\n        var myTasks = {};\n        var availTasks = {};\n        mine.data.forEach(function(task) {\n          convertTask(task);\n          myTasks[task.code] = task;\n        });\n        avails.data.forEach(function(task) {\n          convertTask(task);\n          availTasks[task.code] = task;\n        });\n        self.state.cortex.merge({\n          status: \"loaded\", \n          availableTasks: availTasks,\n          selectedTasks: myTasks\n        });\n      }))\n      .catch(function(err) {\n        // It's possible that we just need to log in...\n        if(err.response) {\n          if(err.response.status === 401 || err.response.status === 403) {\n            self.state.cortex.merge({\n              status: \"unauthorized\",\n              authToken: null\n            });\n          } else {\n            self.state.cortex.merge({\n              status: \"error\",\n              errText: err.response.statusText\n            });\n          }\n        } else {\n          self.state.cortex.merge({\n            status: \"error\",\n            errText: \"server error\"\n          });\n        }\n      });\n  }\n\n  componentDidMount() {\n    // This is really only for debugging now...\n    if(this.state.cortex.status.val() === \"loading\" && \n       this.state.cortex.authToken.val() !== null) {\n      this.wsConnect();\n      this.loadInitialData();\n    }\n  }\n\n  componentDidUpdate() {\n    if(this.state.cortex.status.val() === \"loading\" && \n       this.state.cortex.authToken.val() !== null) {\n      this.wsConnect();\n      this.loadInitialData();\n    }\n  }\n\n  render() {\n    var screen;\n    switch(this.state.cortex.status.getValue()) {\n      case \"loading\":\n        screen = <LoadingScreen />;\n        break;\n      case \"unauthorized\":\n        screen = <LoginScreen cortex={this.state.cortex} />;\n        break;\n      case \"error\":\n        screen = <ErrorScreen err={this.state.cortex.errText.val()} />;\n        break;\n      case \"loaded\":\n        screen = <TaskSelector \n                    authToken={this.state.cortex.authToken}\n                    availableTasks={this.state.cortex.availableTasks}\n                    selectedTasks={this.state.cortex.selectedTasks} />\n        break;\n      default:\n        screen = <ErrorScreen err={\"Unknown state: \" + this.state.cortex.status.val()} />;\n        break;\n    };\n    return (\n      <div className=\"App\">\n        <ServerStatus />\n        <hr/>\n        {screen}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n\n"],"sourceRoot":""}